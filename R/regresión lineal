library(datasauRus)
library(dplyr)
library(ggplot2)

# Filtrar el dataset slant_down
slant_down_data <- datasaurus_dozen %>%
  filter(dataset == "slant_down")

# Ajuste de modelos de regresión
# Modelo lineal
lm_model <- lm(y ~ x, data = slant_down_data)

# Modelo cuadrático
quadratic_model <- lm(y ~ poly(x, 2), data = slant_down_data)

# Modelo polinomial de grado 3
polynomial_model <- lm(y ~ poly(x, 3), data = slant_down_data)

# Gráfico de los modelos ajustados junto con los datos
ggplot(slant_down_data, aes(x = x, y = y)) +
  geom_point(color = "blue") +
  geom_smooth(method = "lm", se = FALSE, color = "red", formula = y ~ x) +  # Modelo lineal
  geom_smooth(method = "lm", se = FALSE, color = "green", formula = y ~ poly(x, 2)) +  # Modelo cuadrático
  geom_smooth(method = "lm", se = FALSE, color = "orange", formula = y ~ poly(x, 3)) +  # Modelo polinomial de grado 3
  labs(title = "Modelos de Regresión para slant_down") +
  theme_minimal()

ggplot(slant_down_data, aes(x = x, y = y)) +
  geom_point(color = "blue") +
  geom_smooth(method = "lm", se = FALSE, color = "red", formula = y ~ x) +  # Modelo lineal
  labs(title = "Modelos de Regresión para slant_down") +
  theme_minimal

ggplot(slant_down_data, aes(x = x, y = y)) +
  geom_point(color = "blue") +
  geom_smooth(method = "lm", se = FALSE, color = "green", formula = y ~ poly(x, 2)) +  # Modelo cuadrático
  labs(title = "Modelos de Regresión para slant_down") +
  theme_minimal()

ggplot(slant_down_data, aes(x = x, y = y)) +
  geom_point(color = "blue") +
  geom_smooth(method = "lm", se = FALSE, color = "orange", formula = y ~ poly(x, 3)) +  # Modelo polinomial de grado 3
  labs(title = "Modelos de Regresión para slant_down") +
  theme_minimal()
